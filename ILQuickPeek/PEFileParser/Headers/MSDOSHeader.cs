using PEFileParser.Exceptions;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PEFileParser.Headers
{
    public class MSDOSHeader : HeaderBase
    {
        private byte[] _validHeader = new byte[] 
        {
            0x4d,0x5a,0x90,0x00,0x03,0x00,0x00,0x00,
            0x04,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,
            0xb8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
            0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
            0x0e,0x1f,0xba,0x0e,0x00,0xb4,0x09,0xcd,
            0x21,0xb8,0x01,0x4c,0xcd,0x21,0x54,0x68,
            0x69,0x73,0x20,0x70,0x72,0x6f,0x67,0x72,
            0x61,0x6d,0x20,0x63,0x61,0x6e,0x6e,0x6f,
            0x74,0x20,0x62,0x65,0x20,0x72,0x75,0x6e,
            0x20,0x69,0x6e,0x20,0x44,0x4f,0x53,0x20,
            0x6d,0x6f,0x64,0x65,0x2e,0x0d,0x0d,0x0a,
            0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00
        };

        public UInt32 lfanew
        {
            get
            {
                return BitConverter.ToUInt32(GetArraySlice(60, 4).ToArray(), 0); 
            }
        }

        public MSDOSHeader()
        {
            _headerValue = new byte[128];
        }

        public MSDOSHeader(byte[] headerValue)
        {
            if(headerValue.Length > 128)
            {
                throw new MSDOSHeaderException("The MS-DOS header is too long.");
            }
            if(headerValue.Length < 128)
            {
                throw new MSDOSHeaderException("The MS-DOS header is too short.");
            }

            ValidateBytes(headerValue);

            _headerValue = headerValue;
        }

        private void ValidateBytes(byte[] headerValue)
        {
            for(int i = 0; i < 127; i++)
            {
                if(headerValue[i] != _validHeader[i]  && (i < 60 || i > 63))//magic numbers from ECMA-335 offsets of lfanew
                {
                    throw new MSDOSHeaderException(String.Format("The MS-DOS header has an invalid byte in offset {0}", i));
                }
            }
        }
    }
}
